---
format: 
  pdf:
    documentclass: article
    classoption: ["a4paper", "12pt", "fleqn"]
    geometry: top=2.5cm, bottom=2.5cm, left=2.5cm, right=2.5cm
    number-sections: true
    toc: false  # Désactiver le sommaire automatique
header-includes: |
  \usepackage{hyperref}  % Liens cliquables
  \hypersetup{
    hidelinks  % Désactive complètement la mise en couleur des liens
  }
---

```{=tex}
\begin{titlepage}
    \begin{center}
        \vspace{\fill}  % Ajoute de l'espace flexible avant

        {\LARGE \textbf{Séries temporelles univariées}}\\
        \vspace{0.5cm}
        {\Large M1 ECAP -- Séance 4 -- Année 2024/2025}\\
        
        \vspace{2cm}
        
        {\Large \textbf{TD4 ANALYSE DE LA NON-STATIONARITÉ ET RACINES UNITAIRES}}\\
        \vspace{0.5cm}
        \textit{Responsable d'enseignement : Benoît SÉVI}\\
        \href{mailto:benoit.sevi@univ-nantes.fr}{benoit.sevi@univ-nantes.fr}\\
        
        \vspace{1.5cm}
        
        {\large \textbf{Timothée CADET, Arthur ERNOUL DE LA PROVOTE}}
        
        \vspace{\fill}  % Ajoute de l'espace flexible après
        
        {\large \today}
    \end{center}
\end{titlepage}
\begingroup
\hypersetup{linkcolor=black}
\tableofcontents
\endgroup
```

#  Chocs permanents vs. chocs transitoires : une analyse exploratoire

```{r}
#| output: false
library(ggplot2)
library(dplyr)
library(tidyr)
```


```{r}
set.seed(123)  # Fixer la graine pour la reproductibilité

# Paramètres
n <- 200  # Nombre d'observations
phi_values <- c(0.5, 0.9, 1)  # Valeurs de phi
shocks <- c(20, 40, -20, -40)  # Valeurs des chocs

# Fonction pour simuler un AR(1) avec un choc
simulate_AR1 <- function(phi, n, shock_value, shock_position = 100) {
  Y <- numeric(n)
  epsilon <- rnorm(n)  # Bruit blanc
  for (t in 2:n) {
    Y[t] <- phi * Y[t - 1] + epsilon[t]
  }
  Y[shock_position] <- Y[shock_position] + shock_value  # Ajouter le choc
  return(Y)
}

# Simulation pour chaque combinaison (phi, choc)
data_list <- list()
for (shock in shocks) {
  for (phi in phi_values) {
    serie <- simulate_AR1(phi, n, shock)
    df <- data.frame(
      Time = 1:n,
      Value = serie,
      Phi = paste0("ϕ = ", phi),
      Shock = paste0("Choc = ", shock)
    )
    data_list <- append(data_list, list(df))
  }
}

# Fusionner toutes les séries
data_all <- bind_rows(data_list)
```


```{r}
# Graphique
ggplot(data_all, aes(x = Time, y = Value, color = Phi)) +
  geom_line() +
  facet_wrap(~Shock, scales = "free_y") +
  labs(title = "Simulation d'un AR(1) avec chocs exogènes",
       x = "Temps",
       y = "Valeur de la série") +
  theme_minimal()

```



## Que remarque-t-on ? 

### Choc = 20, $\phi$ = 0,5

Dans ce scénario, le paramètre $\phi$ est fixé à 0,5, ce qui signifie que le processus AR(1) est stationnaire. Lorsqu'un choc exogène = 20 est appliqué au temps 100, on observe que la série temporelle réagit immédiatement mais revient progressivement à son niveau d'équilibre. La réponse au choc est relativement rapide et amortie, indiquant une capacité de résilience face aux perturbations. Le choc a un effet temporaire, et la série retrouve son comportement initial après un certain temps. Cela illustre bien la nature stationnaire du processus où les chocs n'ont pas d'impact durable.

### Choc = 20, $\phi$ = 0,9

Ici, avec ρ à 0,9, le processus est toujours stationnaire mais plus persistant que dans le cas précédent. Un choc de 20 au temps 100 provoque une réaction plus prolongée dans le temps. La série met plus de temps à revenir à son état d'équilibre comparé au cas où $\phi$ est 0,5. Cela montre que, bien que le système soit stationnaire, la persistance élevée ($\phi$ proche de 1) fait que les chocs ont des effets qui se dissipent plus lentement. La série finit par retrouver son niveau initial, mais l'impact du choc est ressenti sur une période plus longue, soulignant l'importance de la persistance dans la dynamique du système.

### Choc = 20, $\phi$ = 1

Lorsque $\phi$ est égal à 1, le processus devient non stationnaire, caractérisé par une racine unitaire. Un choc de 20 au temps 100 a un effet permanent sur la série temporelle. Contrairement aux cas stationnaires, la série ne revient pas à son niveau d'équilibre initial après le choc. Au lieu de cela, elle se déplace à un nouveau niveau, reflétant l'impact durable du choc. Cela illustre la nature non stationnaire du processus où les chocs ont des conséquences à long terme. La présence d'une racine unitaire signifie que les perturbations peuvent fondamentalement altérer la trajectoire du système, rendant la prédiction future plus incertaine.


### Choc = -20 & = 40 & = -40

Les conclusions tirées sont les mêmes

## Quel est l’impact d’un choc dans le cas d’une marche aléatoire ?

Les graphes montrent clairement que lorsque $\phi$ = 1, un choc exogène (comme ceux appliqués aux temps 100) a un effet permanent sur la série temporelle, introduisant des déviations permanentes. Après le choc, la série ne revient pas à son niveau précédent, mais se stabilise à un nouveau niveau. Cela est visible dans les graphes où la ligne verte ($\phi$ = 1) montre un décalage permanent après le choc.

##  Quelle est donc la conséquence de la présence d’une racine unitaire ?

Dans un marché aléatoire avec une racine unitaire, les chocs exogènes peuvent déplacer le niveau de la série de manière permanente, rendant la prédiction à long terme difficile et incertaine.


# TS vs. DS : simulation de processus

## N(0, 1/4)

```{r}
set.seed(015)

# Paramètres
n <- 200  # Nombre d'observations
sigma2 <- 1/4  # Variance du bruit

epsilon <- rnorm(n, mean = 0, sd = sqrt(sigma2))  # Génération du bruit blanc

# Simulation des processus
Y_DT <- numeric(n)
Y_TS <- numeric(n)

for (t in 1:n) {
  Y_DT[t] <- 0.2 * t + epsilon[t]  # Processus déterministe
  if (t == 1) {
    Y_TS[t] <- epsilon[t]  # Initialisation du processus stochastique
  } else {
    Y_TS[t] <- 0.2 + Y_TS[t - 1] + epsilon[t]  # Processus stochastique
  }
}

# Création du DataFrame
data <- data.frame(
  Time = rep(1:n, 2),
  Value = c(Y_DT, Y_TS),
  Process = rep(c("DT: Yt = 0.2t + εt", "TS: Yt = 0.2 + Yt-1 + εt"), each = n)
)

# Graphique
ggplot(data, aes(x = Time, y = Value, color = Process)) +
  geom_line() +
  labs(title = "Comparaison entre un processus déterministe et un processus stochastique",
       x = "Temps",
       y = "Valeur de la série") +
  theme_minimal()
```


```{r}
set.seed(001)

# Paramètres
n <- 200  # Nombre d'observations
sigma2 <- 1/4  # Variance du bruit

epsilon <- rnorm(n, mean = 0, sd = sqrt(sigma2))  # Génération du bruit blanc

# Simulation des processus
Y_DT <- numeric(n)
Y_TS <- numeric(n)

for (t in 1:n) {
  Y_DT[t] <- 0.2 * t + epsilon[t]  # Processus déterministe
  if (t == 1) {
    Y_TS[t] <- epsilon[t]  # Initialisation du processus stochastique
  } else {
    Y_TS[t] <- 0.2 + Y_TS[t - 1] + epsilon[t]  # Processus stochastique
  }
}

# Création du DataFrame
data <- data.frame(
  Time = rep(1:n, 2),
  Value = c(Y_DT, Y_TS),
  Process = rep(c("DT: Yt = 0.2t + εt", "TS: Yt = 0.2 + Yt-1 + εt"), each = n)
)

# Graphique
ggplot(data, aes(x = Time, y = Value, color = Process)) +
  geom_line() +
  labs(title = "Comparaison entre un processus déterministe et un processus stochastique",
       x = "Temps",
       y = "Valeur de la série") +
  theme_minimal()
```


## Commentaire:  Loi Normal (0, 1/4)

On fait plusieurs graphiques pour ne pas tomber sur un cas atypique et avoir une meilleure qualité d'analyse.

### DT

Sur le graphique, la ligne rouge représente le processus DT. On observe une tendance linéaire claire avec des fluctuations mineures autour de cette tendance en raison du terme aléatoire $\epsilon_t$. La progression est régulière et prévisible, malgré les petites variations.

### TS

La ligne bleue représente le processus stochastique (TS). Contrairement au processus déterministe, la trajectoire est beaucoup moins prévisible. Bien qu'il y ait une tendance générale ascendante due à la constante positive (0.2), les fluctuations sont plus prononcées, et la série peut s'écarter significativement de la tendance linéaire en raison de l'accumulation des termes aléatoires. Ce processus est un exemple de marche aléatoire avec une dérive.

### Comparaison

  Le processus déterministe est plus prévisible, car il suit une trajectoire linéaire claire avec des déviations mineures. En revanche, le processus stochastique est moins prévisible en raison de l'accumulation des termes aléatoires, ce qui rend la trajectoire future plus incertaine.

  Le processus stochastique montre une plus grande variabilité et des écarts plus importants par rapport à la tendance linéaire. Cela est dû à la nature cumulative des chocs aléatoires, qui peuvent déplacer la série de manière significative.

  Bien que les deux processus montrent une tendance générale ascendante, la manière dont cette tendance est réalisée diffère. Le processus déterministe suit une progression régulière, tandis que le processus stochastique montre une progression plus irrégulière

### Conclusion

 Le processus déterministe offre une trajectoire plus stable et prévisible, tandis que le processus stochastique introduit une plus grande incertitude et variabilité.
Le processus déterministe est plus proche de sa tendance contrairement au processus stochastique.


## N(0, 1/2)

```{r}
set.seed(015)

# Paramètres
n <- 200  # Nombre d'observations
sigma2 <- 1/2  # Variance du bruit

epsilon <- rnorm(n, mean = 0, sd = sqrt(sigma2))  # Génération du bruit blanc

# Simulation des processus
Y_DT <- numeric(n)
Y_TS <- numeric(n)

for (t in 1:n) {
  Y_DT[t] <- 0.2 * t + epsilon[t]  # Processus déterministe
  if (t == 1) {
    Y_TS[t] <- epsilon[t]  # Initialisation du processus stochastique
  } else {
    Y_TS[t] <- 0.2 + Y_TS[t - 1] + epsilon[t]  # Processus stochastique
  }
}

# Création du DataFrame
data <- data.frame(
  Time = rep(1:n, 2),
  Value = c(Y_DT, Y_TS),
  Process = rep(c("DT: Yt = 0.2t + εt", "TS: Yt = 0.2 + Yt-1 + εt"), each = n)
)

# Graphique
ggplot(data, aes(x = Time, y = Value, color = Process)) +
  geom_line() +
  labs(title = "Comparaison entre un processus déterministe et un processus stochastique",
       x = "Temps",
       y = "Valeur de la série") +
  theme_minimal()
```

```{r}

set.seed(001)

# Paramètres
n <- 200  # Nombre d'observations
sigma2 <- 1/2  # Variance du bruit

epsilon <- rnorm(n, mean = 0, sd = sqrt(sigma2))  # Génération du bruit blanc

# Simulation des processus
Y_DT <- numeric(n)
Y_TS <- numeric(n)

for (t in 1:n) {
  Y_DT[t] <- 0.2 * t + epsilon[t]  # Processus déterministe
  if (t == 1) {
    Y_TS[t] <- epsilon[t]  # Initialisation du processus stochastique
  } else {
    Y_TS[t] <- 0.2 + Y_TS[t - 1] + epsilon[t]  # Processus stochastique
  }
}

# Création du DataFrame
data <- data.frame(
  Time = rep(1:n, 2),
  Value = c(Y_DT, Y_TS),
  Process = rep(c("DT: Yt = 0.2t + εt", "TS: Yt = 0.2 + Yt-1 + εt"), each = n)
)

# Graphique
ggplot(data, aes(x = Time, y = Value, color = Process)) +
  geom_line() +
  labs(title = "Comparaison entre un processus déterministe et un processus stochastique",
       x = "Temps",
       y = "Valeur de la série") +
  theme_minimal()
```


## N(0, 1)

```{r}
set.seed(015)

# Paramètres
n <- 200  # Nombre d'observations
sigma2 <- 1  # Variance du bruit

epsilon <- rnorm(n, mean = 0, sd = sqrt(sigma2))  # Génération du bruit blanc

# Simulation des processus
Y_DT <- numeric(n)
Y_TS <- numeric(n)

for (t in 1:n) {
  Y_DT[t] <- 0.2 * t + epsilon[t]  # Processus déterministe
  if (t == 1) {
    Y_TS[t] <- epsilon[t]  # Initialisation du processus stochastique
  } else {
    Y_TS[t] <- 0.2 + Y_TS[t - 1] + epsilon[t]  # Processus stochastique
  }
}

# Création du DataFrame
data <- data.frame(
  Time = rep(1:n, 2),
  Value = c(Y_DT, Y_TS),
  Process = rep(c("DT: Yt = 0.2t + εt", "TS: Yt = 0.2 + Yt-1 + εt"), each = n)
)

# Graphique
ggplot(data, aes(x = Time, y = Value, color = Process)) +
  geom_line() +
  labs(title = "Comparaison entre un processus déterministe et un processus stochastique",
       x = "Temps",
       y = "Valeur de la série") +
  theme_minimal()
```

```{r}

set.seed(001)

# Paramètres
n <- 200  # Nombre d'observations
sigma2 <- 1  # Variance du bruit

epsilon <- rnorm(n, mean = 0, sd = sqrt(sigma2))  # Génération du bruit blanc

# Simulation des processus
Y_DT <- numeric(n)
Y_TS <- numeric(n)

for (t in 1:n) {
  Y_DT[t] <- 0.2 * t + epsilon[t]  # Processus déterministe
  if (t == 1) {
    Y_TS[t] <- epsilon[t]  # Initialisation du processus stochastique
  } else {
    Y_TS[t] <- 0.2 + Y_TS[t - 1] + epsilon[t]  # Processus stochastique
  }
}

# Création du DataFrame
data <- data.frame(
  Time = rep(1:n, 2),
  Value = c(Y_DT, Y_TS),
  Process = rep(c("DT: Yt = 0.2t + εt", "TS: Yt = 0.2 + Yt-1 + εt"), each = n)
)

# Graphique
ggplot(data, aes(x = Time, y = Value, color = Process)) +
  geom_line() +
  labs(title = "Comparaison entre un processus déterministe et un processus stochastique",
       x = "Temps",
       y = "Valeur de la série") +
  theme_minimal()
```

## Commentaire:  Loi Normal (0, 1/2) et (0, 1)

On examine comment l'augmentation de la variance affecte les processus déterministe (DT) et stochastique (TS).

### N(0, 1/2)

 La variance est deux fois plus grande que celle de N(0,1/4). Cela signifie que les fluctuations autour de la tendance seront plus prononcées.

#### DT

La tendance linéaire reste visible, mais les fluctuations autour de cette tendance sont plus légèrement plus importantes. 

#### TS

Les écarts par rapport à la tendance linéaire sont plus marqués.
La tendance linéaire reste visible.

### N(0, 1)

La variance est quatre fois plus grande que celle de N(0,1/4).

#### DT

Les écarts sont encore plus prononcés, avec des fluctuations importantes autour de la tendance linéaire.

#### TS

Les écarts sont très marqués, avec une trajectoire qui s'écarte considérablement de la tendance linéaire.


### Conclusion

En résumé, l'augmentation de la variance dans les processus N(0,1/2) et N(0,1) entraîne des écarts plus importants par rapport à la tendance, en particulier pour le processus stochastique. Le processus déterministe, bien que plus stable, voit également ses écarts augmenter.
